@using Auction.Infrastructure.Helpers
@using Auction.Models

@model global::Auction.Web.ViewModels.Item.CreateItemViewModel
@{
    ViewBag.Title = "CreateItem";
}

<h2>Create Item</h2>
@if (TempData["Success"] != null)
{
    <div class="row">
        @TempData["Success"]
    </div>
}

<div class="container">
    @using (Html.BeginForm("CreateItem", "Item", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="row">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title)
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Author)
            @Html.TextBoxFor(m => m.Author, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Author)
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Type)
            @Html.DropDownListFor(m => m.Type, Enum.GetNames(typeof(ItemType)).Select(e => new SelectListItem { Text = e }), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Type)
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Author)
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-10">
                <input type="file" name="files" class="btn btn-success" accept="image/*" multiple="multiple"/>
                <br />
            </div>
        </div>
        <div class="row">
            @Html.Submit(new { @class = "btn btn-danger" })
        </div>
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}

