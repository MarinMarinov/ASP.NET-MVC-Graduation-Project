@model global::Auction.Web.ViewModels.Item.ItemViewModel
@{
    ViewBag.Title = "Edit Item";
}

<h2>@ViewBag.Title</h2>

@if (TempData["Success"] != null)
{
    <div class="row alert alert-success">
        @TempData["Success"]
    </div>
}

<div class="container">
    @using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="row">
            <div class="col col-md-3">
                @Html.LabelFor(m => m.Title)
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Title)
            </div>
        </div>
        <div class="row">
            <div class="col col-md-3">
                @Html.LabelFor(m => m.Author)
                @Html.TextBoxFor(m => m.Author, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Author)
            </div>
        </div>
        <div class="row">
            <div class="col col-md-3">
                @Html.LabelFor(m => m.Type)
                @Html.DropDownListFor(m => m.Type, Enum.GetNames(typeof(ItemType)).Select(e => new SelectListItem { Text = e }), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Type)
            </div>
        </div>
        <div class="row">
            <div class="col col-md-12">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control description", rows = 5 })
                @Html.ValidationMessageFor(m => m.Description)
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Images)
            @foreach (var image in Model.Images)
            {
                <div class="col">
                    <div class="col col-md-3">
                        <div class="well well-sm text-center" id="image-@image.Id">
                            <img src="@Url.Action("GetImage", "Item", new { id = image.Id })" width="250" height="250" alt="Item image" />

                            @* @using (Ajax.BeginForm("DeleteImage", "Image", new { area = "Admin", id = image.Id }, new AjaxOptions
                            {
                                HttpMethod = "POST",
                                OnFailure = "deleteImage",
                                Confirm = "Are you sure, you want to delete this image"
                            }))
                            {
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            }*@

                            @Html.ActionLink("Delete", "DeleteImage", "Image", new { imageId = image.Id, itemId = Model.Id }, new {@class="btn btn-danger"})
                        </div>
                    </div>
                </div>
            }
        </div>
        <br />
        <div class="form-group">
            <div class="col">
                <div class="col-md-10">
                    <input type="file" name="files" class="btn btn-success" accept="image/*" multiple="multiple" />
                    <br />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col col-md-3">
                @Html.Submit(new { @class = "btn btn-danger" })
            </div>
        </div>
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/jquery.unobtrusive-ajax")
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function deleteImage(data) {
            debugger;
            var image = $('#image' + data.Id);
            image.text('');
        }
    </script>
}

