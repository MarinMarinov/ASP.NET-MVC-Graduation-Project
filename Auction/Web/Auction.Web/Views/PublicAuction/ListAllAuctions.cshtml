@model IEnumerable<global::Auction.Web.ViewModels.Auction.AuctionViewModel>

@{
    ViewBag.Title = "Auctions";
}

<h2>@ViewBag.Title</h2>

@if (TempData["Deactivated"] != null)
{
    <div class="alert alert-danger">
        @TempData["Deactivated"]
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="row alert alert-success">
        @TempData["Success"]
    </div>
}

@Html.Grid(Model).Columns(columns =>
{

    columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(100)
            .RenderValueAs(d =>
            @<b>
                @if (this.User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Edit", "EditAuction", "Auction", new { id = d.Id, area = "Admin" }, new { @class = "btn btn-warning" })
                    <span></span>
                    @Html.ActionLink("Delete", "Delete", "Auction", new { id = d.Id, area = "Admin" }, new { @class = "btn btn-danger" })
                }
            </b>);

    columns.Add(i => i.Name).Titled("Name").SetWidth(150);

    columns.Add(i => i.DateOfAuction).Titled("Date of auction").SetWidth(150);

    columns.Add(i => i.Active).Titled("Active").SetWidth(150);
    columns.Add(i => i.InitialPrice).Titled("Initial price").SetWidth(150);
    columns.Add(i => i.BidStep).Titled("Bid step").SetWidth(150);



}).WithPaging(5).Sortable().Filterable().WithMultipleFilters()
